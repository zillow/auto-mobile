name: "Pull Request"

on:
  pull_request:
    branches:
      - "**"

permissions:
  checks: write
  security-events: write
  pull-requests: write
  contents: read
  packages: write

jobs:
  # Security Checks
  security-dependency-scan:
    name: "Security - Dependency Vulnerability Scan"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Setup Node.js"
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '20'
          cache: 'npm'

      - name: "Install Dependencies"
        run: npm ci

      - name: "Run npm audit"
        run: npm audit --audit-level=moderate

      - name: "Setup Java"
        uses: actions/setup-java@6a0805fcefea3d4657a47ac4c165951e33482018 # v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: "Run Gradle Dependency Check"
        working-directory: android
        run: ./gradlew dependencyCheckAnalyze

      - name: "Upload Dependency Check Report"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: dependency-check-report
          path: android/build/reports/dependency-check-report.html

  security-trivy-scan:
    name: "Security - Trivy Vulnerability Scanner"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Run Trivy vulnerability scanner"
        uses: aquasecurity/trivy-action@6e7b7d1fd3e4fef0c5fa8cce1229c54b9ceecbf5 # v0.24.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: "Upload Trivy scan results to GitHub Security tab"
        uses: github/codeql-action/upload-sarif@4f3212b61783c3c68e8309a0f18a699764811cda # v3.27.1
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  security-secrets-scan:
    name: "Security - Secret Scanning"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0

      - name: "Run TruffleHog OSS"
        uses: trufflesecurity/trufflehog@v3.82.12
        with:
          path: ./
          base: main
          head: HEAD
          extra_args: --debug --only-verified

  security-codeql:
    name: "Security - CodeQL Analysis"
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'java']
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Initialize CodeQL"
        uses: github/codeql-action/init@4f3212b61783c3c68e8309a0f18a699764811cda # v3.27.1
        with:
          languages: ${{ matrix.language }}

      - name: "Autobuild"
        uses: github/codeql-action/autobuild@4f3212b61783c3c68e8309a0f18a699764811cda # v3.27.1

      - name: "Perform CodeQL Analysis"
        uses: github/codeql-action/analyze@4f3212b61783c3c68e8309a0f18a699764811cda # v3.27.1
        with:
          category: "/language:${{matrix.language}}"

  security-license-scan:
    name: "Security - License Compliance"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Setup Node.js"
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: '20'
          cache: 'npm'

      - name: "Install Dependencies"
        run: npm ci

      - name: "Run License Checker"
        run: |
          npx license-checker --summary --excludePrivatePackages --failOn 'GPL;AGPL;LGPL;UNLICENSED' --csv > license-report.csv || true

      - name: "Upload License Report"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: license-report
          path: license-report.csv

  security-sbom:
    name: "Security - Generate SBOM"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Generate SBOM"
        uses: CycloneDX/gh-node-module-generatebom@00866aa15f5084917b6c6c43e7a0f1b6b6f1db8f # v1.0.3
        with:
          path: ./
          output: ./sbom.json

      - name: "Upload SBOM"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: sbom
          path: sbom.json

  # TODO: Fix Node tests on view hierachy sample dumps
  #  validate-xml:
  #    name: "Validate XML"
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: "Git Checkout"
  #        uses: actions/checkout@v4
  #
  #      - name: "Run XMLStarlet"
  #        shell: "bash"
  #        run: |
  #          sudo apt-get update
  #          sudo apt-get install xmlstarlet
  #          scripts/xml/validate_xml.sh

  ktfmt:
    name: "ktfmt"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Run ktfmt"
        shell: "bash"
        run: |
          INSTALL_KTFMT_WHEN_MISSING=true ONLY_TOUCHED_FILES=false scripts/ktfmt/validate_ktfmt.sh

  validate-shell-scripts:
    name: "Validate Shell Scripts"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: "Run ShellCheck"
        shell: "bash"
        run: |
          scripts/shellcheck/validate_shell_scripts.sh

  mcp-build-and-test:
    name: "Node TypeScript Build and Test"
    runs-on: ubuntu-latest
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/setup-auto-mobile-npm-package

      - name: "Run Lint"
        run: npm run lint

      - name: "Run Tests"
        run: npm run test

  junit-runner-unit-tests:
    name: "Run JUnitRunner Unit Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/setup-auto-mobile-npm-package

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":junit-runner:test"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

  kotlin-test-author-unit-tests:
    name: "Run KotlinTestAuthor Unit Tests"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":kotlinTestAuthor:testDebugUnitTest"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

  build-junit-runner-library:
    name: "Build JUnitRunner Library"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/setup-auto-mobile-npm-package

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":junitRunner:assemble"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Store AAR"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: aar
          path: core/build/outputs/aar/core-debug.aar

  build-kotlin-test-author-clikt-app:
    name: "Build Kotlin Test Author Clikt App"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":kotlinTestAuthor:assembleDist"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Store AAR"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        with:
          name: aar
          path: core/build/outputs/aar/core-debug.aar

  build-playground-app:
    name: "Build Playground App"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: android
    steps:
      - name: "Git Checkout"
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - uses: ./.github/actions/setup-auto-mobile-npm-package

      - uses: ./.github/actions/gradle-task-run
        with:
          gradle-tasks: ":playground:app:assembleDebug"
          reuse-configuration-cache: true
          gradle-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Store Sample APK"
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: success()  # Only upload if build succeeded
        with:
          name: playground-app-apk
          path: android/playground/app/build/outputs/apk/debug/playground-app-debug.apk
